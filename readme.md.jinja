{{ disclaimer }}
# `git_delete_stale_branches`

Safely delete your version controlled branches.

Main use case:

*   I'm developing a feature on my `feat1` branch on computer A and computer B.

*   I work alternating development on both computers.

*   Once merged, one (or both) of the computers end up with stale, unused branches from that development (e.g. `feat1_a`, `feat1_b`, etc).

    `git_delete_stale_branches` allows one to safely remove these branches by comparing timestamps that are inserted into a version controlled file. If there's a commit that comes after the insertion timestamp, that branch does not get deleted. If the last commit precedes the timestamp, the branch gets deleted. Since both machines share these list of branches to be deleted, you end up with a cleaner development process.

How to easily get Unix timestamp for vim users: `inoreabbrev nows <C-R>=strftime("%s")<CR>`.

## Man page

`✂ --------------------------------------------------`

{% include 'docs/manpage.md.clean' %}

`-------------------------------------------------- ✂`

## Releasing

```
cdp git_delete_stale_branches
rm ./output/deb/*.deb
make down build test release
```

<!--

## Developing

???

-->

### Testing

```
cd /path/to/git_delete_stale_branches
rm ./output/deb/*.deb
make package down build test
```

## Notes

*   `v0.1.x` requires a newer version of `gawk`, one that accepts `--csv` (`5.3.1` is certain to have it).

## TODO

*   ̶A̶̶̶d̶̶̶d̶̶ ̶a̶̶ ̶3̶̶̶-̶̶̶f̶̶̶i̶̶̶e̶̶̶l̶̶̶d̶̶ ̶C̶̶̶S̶̶̶V̶̶ ̶v̶̶̶e̶̶̶r̶̶̶s̶̶̶i̶̶̶o̶̶̶n̶̶̶.̶̶

    *   ̶U̶̶̶p̶̶̶d̶̶̶a̶̶̶t̶̶̶e̶̶ ̶d̶̶̶o̶̶̶c̶̶̶s̶̶̶.̶̶

*   ̶S̶̶̶u̶̶̶p̶̶̶p̶̶̶o̶̶̶r̶̶̶t̶̶ ̶a̶̶ ̶2̶̶̶-̶̶̶f̶̶̶i̶̶̶e̶̶̶l̶̶̶d̶̶ ̶C̶̶̶S̶̶̶V̶̶ ̶v̶̶̶e̶̶̶r̶̶̶s̶̶̶i̶̶̶o̶̶̶n̶̶ ̶a̶̶̶n̶̶̶d̶̶ ̶3̶̶ ̶f̶̶̶i̶̶̶e̶̶̶l̶̶̶d̶̶ ̶o̶̶̶n̶̶̶e̶̶̶.̶̶

*   ̶A̶̶̶d̶̶̶d̶̶ ̶a̶̶ ̶c̶̶̶o̶̶̶n̶̶̶c̶̶̶r̶̶̶e̶̶̶t̶̶̶e̶̶ ̶u̶̶̶s̶̶̶a̶̶̶g̶̶̶e̶̶ ̶f̶̶̶o̶̶̶r̶̶ ̶c̶̶̶o̶̶̶p̶̶̶y̶̶ ̶p̶̶̶a̶̶̶s̶̶̶t̶̶̶i̶̶̶n̶̶̶g̶̶̶.̶̶̶.̶̶̶.̶̶

*   ̶R̶̶̶e̶̶̶m̶̶̶o̶̶̶v̶̶̶e̶̶ ̶t̶̶̶h̶̶̶e̶̶ ̶c̶̶̶l̶̶̶u̶̶̶t̶̶̶t̶̶̶e̶̶̶r̶̶̶i̶̶̶n̶̶̶g̶̶ ̶v̶̶̶e̶̶̶r̶̶̶b̶̶̶o̶̶̶s̶̶̶i̶̶̶t̶̶̶y̶̶ ̶t̶̶̶h̶̶̶a̶̶̶t̶̶ ̶p̶̶̶r̶̶̶e̶̶̶v̶̶̶e̶̶̶n̶̶̶t̶̶̶s̶̶ ̶u̶̶̶n̶̶̶d̶̶̶e̶̶̶r̶̶̶s̶̶̶t̶̶̶a̶̶̶n̶̶̶d̶̶̶i̶̶̶n̶̶̶g̶̶ ̶o̶̶̶f̶̶ ̶w̶̶̶h̶̶̶a̶̶̶t̶̶ ̶i̶̶̶s̶̶ ̶b̶̶̶e̶̶̶i̶̶̶n̶̶̶g̶̶ ̶d̶̶̶o̶̶̶n̶̶̶e̶̶̶.̶̶

*   Allow for deletion of remotes other than `origin`.

*   ̶A̶̶̶d̶̶̶d̶̶ ̶p̶̶̶a̶̶̶c̶̶̶k̶̶̶a̶̶̶g̶̶̶e̶̶̶s̶̶ ̶d̶̶̶e̶̶̶f̶̶̶i̶̶̶n̶̶̶i̶̶̶t̶̶̶i̶̶̶o̶̶̶n̶̶̶.̶̶ ̶I̶̶̶d̶̶̶e̶̶̶a̶̶̶l̶̶̶l̶̶̶y̶̶ ̶w̶̶̶i̶̶̶t̶̶̶h̶̶ ̶a̶̶ ̶p̶̶̶r̶̶̶o̶̶̶j̶̶̶e̶̶̶c̶̶̶t̶̶ ̶t̶̶̶h̶̶̶a̶̶̶t̶̶ ̶c̶̶̶h̶̶̶e̶̶̶c̶̶̶k̶̶̶s̶̶ ̶a̶̶̶l̶̶̶l̶̶ ̶t̶̶̶h̶̶̶e̶̶ ̶d̶̶̶e̶̶̶p̶̶̶e̶̶̶n̶̶̶d̶̶̶e̶̶̶n̶̶̶c̶̶̶i̶̶̶e̶̶̶s̶̶̶.̶̶

*   Depends on [shell_argument_parsing_file]: add a `--help` and `--verbose` flags.

    Maybe use [docopt](https://github.com/andsens/docopt.sh) instead of [`shell_argument_parsing_file`](https://github.com/fmv1992/shell_argument_parsing_file).

## Related projects

*   [`fmv1992_cookiecutter_shell`](https://github.com/fmv1992/fmv1992_cookiecutter_shell): this repos uses `fmv1992_cookiecutter_shell`.

*   [`shell_argument_parsing_file`](https://github.com/fmv1992/shell_argument_parsing_file): this repos uses `shell_argument_parsing_file`.

<!--  -->

<!-- https://pandoc.org/chunkedhtml-demo/8.16-links-1.html -->

[recutils_website]: https://www.gnu.org/software/recutils/ (GNU Recutils)

<!--  ???: not working -->
[shell_argument_parsing_file]: https://github.com/fmv1992/shell_argument_parsing_file (shell_argument_parsing_file)

<!-- # vim: set filetype=pandoc fileformat=unix nowrap spell spelllang=en: -->

{{ disclaimer }}
